{
  "name": "default-keys-windows",
  "displayName": "Windows Default Keybindings",
  "description": "Provide Windows default keybindings on any platform.",
  "repository": {
    "type": "git",
    "url": "https://github.com/smcpeak/vscode-default-keys-windows"
  },
  "icon": "icon.png",
  "license": "MIT",
  "publisher": "smcpeak",
  "version": "0.0.6",
  "engines": {
    "vscode": "^1.47.3"
  },
  "categories": [
    "Keymaps"
  ],
  "keywords": [
    "keymap"
  ],
  "scripts": {
    "package": "vsce package"
  },
  "contributes": {
    "keybindings": [
      { "key": "escape escape",         "command": "workbench.action.exitZenMode",
                                        "when": "inZenMode" },
      { "key": "shift+escape",          "command": "closeReferenceSearch",
                                        "when": "inReferenceSearchEditor && !config.editor.stablePeek" },
      { "key": "escape",                "command": "closeReferenceSearch",
                                        "when": "inReferenceSearchEditor && !config.editor.stablePeek" },
      { "key": "shift+escape",          "command": "cancelSelection",
                                        "when": "editorHasSelection && textInputFocus" },
      { "key": "escape",                "command": "cancelSelection",
                                        "when": "editorHasSelection && textInputFocus" },
      { "key": "ctrl+end",              "command": "cursorBottom",
                                        "when": "textInputFocus" },
      { "key": "ctrl+shift+end",        "command": "cursorBottomSelect",
                                        "when": "textInputFocus" },
      { "key": "ctrl+shift+alt+down",   "command": "cursorColumnSelectDown",
                                        "when": "textInputFocus" },
      { "key": "ctrl+shift+alt+left",   "command": "cursorColumnSelectLeft",
                                        "when": "textInputFocus" },
      { "key": "ctrl+shift+alt+pagedown", "command": "cursorColumnSelectPageDown",
                                        "when": "textInputFocus" },
      { "key": "ctrl+shift+alt+pageup", "command": "cursorColumnSelectPageUp",
                                        "when": "textInputFocus" },
      { "key": "ctrl+shift+alt+right",  "command": "cursorColumnSelectRight",
                                        "when": "textInputFocus" },
      { "key": "ctrl+shift+alt+up",     "command": "cursorColumnSelectUp",
                                        "when": "textInputFocus" },
      { "key": "down",                  "command": "cursorDown",
                                        "when": "textInputFocus" },
      { "key": "ctrl+shift+down",       "command": "cursorDownSelect",
                                        "when": "textInputFocus" },
      { "key": "shift+down",            "command": "cursorDownSelect",
                                        "when": "textInputFocus" },
      { "key": "end",                   "command": "cursorEnd",
                                        "when": "textInputFocus",
                                        "args": {"sticky":false} },
      { "key": "shift+end",             "command": "cursorEndSelect",
                                        "when": "textInputFocus",
                                        "args": {"sticky":false} },
      { "key": "home",                  "command": "cursorHome",
                                        "when": "textInputFocus" },
      { "key": "shift+home",            "command": "cursorHomeSelect",
                                        "when": "textInputFocus" },
      { "key": "left",                  "command": "cursorLeft",
                                        "when": "textInputFocus" },
      { "key": "shift+left",            "command": "cursorLeftSelect",
                                        "when": "textInputFocus" },
      { "key": "pagedown",              "command": "cursorPageDown",
                                        "when": "textInputFocus" },
      { "key": "shift+pagedown",        "command": "cursorPageDownSelect",
                                        "when": "textInputFocus" },
      { "key": "pageup",                "command": "cursorPageUp",
                                        "when": "textInputFocus" },
      { "key": "shift+pageup",          "command": "cursorPageUpSelect",
                                        "when": "textInputFocus" },
      { "key": "right",                 "command": "cursorRight",
                                        "when": "textInputFocus" },
      { "key": "shift+right",           "command": "cursorRightSelect",
                                        "when": "textInputFocus" },
      { "key": "ctrl+home",             "command": "cursorTop",
                                        "when": "textInputFocus" },
      { "key": "ctrl+shift+home",       "command": "cursorTopSelect",
                                        "when": "textInputFocus" },
      { "key": "up",                    "command": "cursorUp",
                                        "when": "textInputFocus" },
      { "key": "ctrl+shift+up",         "command": "cursorUpSelect",
                                        "when": "textInputFocus" },
      { "key": "shift+up",              "command": "cursorUpSelect",
                                        "when": "textInputFocus" },
      { "key": "shift+backspace",       "command": "deleteLeft",
                                        "when": "textInputFocus" },
      { "key": "backspace",             "command": "deleteLeft",
                                        "when": "textInputFocus" },
      { "key": "delete",                "command": "deleteRight",
                                        "when": "textInputFocus" },
      { "key": "ctrl+a",                "command": "editor.action.selectAll" },
      { "key": "ctrl+l",                "command": "expandLineSelection",
                                        "when": "textInputFocus" },
      { "key": "shift+tab",             "command": "outdent",
                                        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus" },
      { "key": "ctrl+shift+z",          "command": "redo" },
      { "key": "ctrl+y",                "command": "redo" },
      { "key": "ctrl+down",             "command": "scrollLineDown",
                                        "when": "textInputFocus" },
      { "key": "ctrl+up",               "command": "scrollLineUp",
                                        "when": "textInputFocus" },
      { "key": "alt+pagedown",          "command": "scrollPageDown",
                                        "when": "textInputFocus" },
      { "key": "alt+pageup",            "command": "scrollPageUp",
                                        "when": "textInputFocus" },
      { "key": "tab",                   "command": "tab",
                                        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus" },
      { "key": "ctrl+z",                "command": "undo" },
      { "key": "shift+down",            "command": "cursorColumnSelectDown",
                                        "when": "editorColumnSelection && textInputFocus" },
      { "key": "shift+left",            "command": "cursorColumnSelectLeft",
                                        "when": "editorColumnSelection && textInputFocus" },
      { "key": "shift+pagedown",        "command": "cursorColumnSelectPageDown",
                                        "when": "editorColumnSelection && textInputFocus" },
      { "key": "shift+pageup",          "command": "cursorColumnSelectPageUp",
                                        "when": "editorColumnSelection && textInputFocus" },
      { "key": "shift+right",           "command": "cursorColumnSelectRight",
                                        "when": "editorColumnSelection && textInputFocus" },
      { "key": "shift+up",              "command": "cursorColumnSelectUp",
                                        "when": "editorColumnSelection && textInputFocus" },
      { "key": "shift+escape",          "command": "removeSecondaryCursors",
                                        "when": "editorHasMultipleSelections && textInputFocus" },
      { "key": "escape",                "command": "removeSecondaryCursors",
                                        "when": "editorHasMultipleSelections && textInputFocus" },
      { "key": "f12",                   "command": "goToNextReference",
                                        "when": "inReferenceSearchEditor || referenceSearchVisible" },
      { "key": "f4",                    "command": "goToNextReference",
                                        "when": "inReferenceSearchEditor || referenceSearchVisible" },
      { "key": "shift+f12",             "command": "goToPreviousReference",
                                        "when": "inReferenceSearchEditor || referenceSearchVisible" },
      { "key": "shift+f4",              "command": "goToPreviousReference",
                                        "when": "inReferenceSearchEditor || referenceSearchVisible" },
      { "key": "shift+enter",           "command": "refactorPreview.apply",
                                        "when": "refactorPreview.enabled && refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview'" },
      { "key": "escape",                "command": "notebook.cell.quitEdit",
                                        "when": "inputFocus && notebookEditorFocused && !editorHasSelection && !editorHoverVisible" },
      { "key": "ctrl+f",                "command": "actions.find" },
      { "key": "enter",                 "command": "breakpointWidget.action.acceptInput",
                                        "when": "breakpointWidgetVisible && inBreakpointWidget" },
      { "key": "shift+escape",          "command": "closeBreakpointWidget",
                                        "when": "breakpointWidgetVisible && textInputFocus" },
      { "key": "escape",                "command": "closeBreakpointWidget",
                                        "when": "breakpointWidgetVisible && textInputFocus" },
      { "key": "ctrl+u",                "command": "cursorUndo",
                                        "when": "textInputFocus" },
      { "key": "ctrl+right",            "command": "cursorWordEndRight",
                                        "when": "textInputFocus" },
      { "key": "ctrl+shift+right",      "command": "cursorWordEndRightSelect",
                                        "when": "textInputFocus" },
      { "key": "ctrl+left",             "command": "cursorWordStartLeft",
                                        "when": "textInputFocus" },
      { "key": "ctrl+shift+left",       "command": "cursorWordStartLeftSelect",
                                        "when": "textInputFocus" },
      { "key": "ctrl+backspace",        "command": "deleteWordLeft",
                                        "when": "textInputFocus && !editorReadonly" },
      { "key": "ctrl+delete",           "command": "deleteWordRight",
                                        "when": "textInputFocus && !editorReadonly" },
      { "key": "ctrl+k ctrl+c",         "command": "editor.action.addCommentLine",
                                        "when": "editorTextFocus && !editorReadonly" },
      { "key": "ctrl+d",                "command": "editor.action.addSelectionToNextFindMatch",
                                        "when": "editorFocus" },
      { "key": "shift+alt+oem_period",  "command": "editor.action.autoFix",
                                        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/" },
      { "key": "shift+alt+a",           "command": "editor.action.blockComment",
                                        "when": "editorTextFocus && !editorReadonly" },
      { "key": "escape",                "command": "editor.action.cancelSelectionAnchor",
                                        "when": "editorTextFocus && selectionAnchorSet" },
      { "key": "ctrl+f2",               "command": "editor.action.changeAll",
                                        "when": "editorTextFocus && editorTextFocus && !editorReadonly" },
      { "key": "ctrl+insert",           "command": "editor.action.clipboardCopyAction" },
      { "key": "ctrl+c",                "command": "editor.action.clipboardCopyAction" },
      { "key": "shift+delete",          "command": "editor.action.clipboardCutAction" },
      { "key": "ctrl+x",                "command": "editor.action.clipboardCutAction" },
      { "key": "shift+insert",          "command": "editor.action.clipboardPasteAction" },
      { "key": "ctrl+v",                "command": "editor.action.clipboardPasteAction" },
      { "key": "ctrl+oem_2",            "command": "editor.action.commentLine",
                                        "when": "editorTextFocus && !editorReadonly" },
      { "key": "shift+alt+down",        "command": "editor.action.copyLinesDownAction",
                                        "when": "editorTextFocus && !editorReadonly" },
      { "key": "shift+alt+up",          "command": "editor.action.copyLinesUpAction",
                                        "when": "editorTextFocus && !editorReadonly" },
      { "key": "ctrl+k ctrl+k",         "command": "editor.action.defineKeybinding",
                                        "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'" },
      { "key": "ctrl+shift+k",          "command": "editor.action.deleteLines",
                                        "when": "textInputFocus && !editorReadonly" },
      { "key": "f7",                    "command": "editor.action.diffReview.next",
                                        "when": "isInDiffEditor" },
      { "key": "shift+f7",              "command": "editor.action.diffReview.prev",
                                        "when": "isInDiffEditor" },
      { "key": "alt+f3",                "command": "editor.action.dirtydiff.next",
                                        "when": "editorTextFocus" },
      { "key": "shift+alt+f3",          "command": "editor.action.dirtydiff.previous",
                                        "when": "editorTextFocus" },
      { "key": "enter",                 "command": "editor.action.extensioneditor.findNext",
                                        "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'" },
      { "key": "shift+enter",           "command": "editor.action.extensioneditor.findPrevious",
                                        "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'" },
      { "key": "ctrl+f",                "command": "editor.action.extensioneditor.showfind",
                                        "when": "!editorFocus && activeEditor == 'workbench.editor.extension'" },
      { "key": "shift+alt+f",           "command": "editor.action.formatDocument",
                                        "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor" },
      { "key": "shift+alt+f",           "command": "editor.action.formatDocument.none",
                                        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorHasDocumentFormattingProvider && !editorReadonly" },
      { "key": "ctrl+k ctrl+f",         "command": "editor.action.formatSelection",
                                        "when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly" },
      { "key": "ctrl+f12",              "command": "editor.action.goToImplementation",
                                        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor" },
      { "key": "shift+f12",             "command": "editor.action.goToReferences",
                                        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" },
      { "key": "ctrl+shift+oem_period", "command": "editor.action.inPlaceReplace.down",
                                        "when": "editorTextFocus && !editorReadonly" },
      { "key": "ctrl+shift+oem_comma",  "command": "editor.action.inPlaceReplace.up",
                                        "when": "editorTextFocus && !editorReadonly" },
      { "key": "ctrl+oem_6",            "command": "editor.action.indentLines",
                                        "when": "editorTextFocus && !editorReadonly" },
      { "key": "ctrl+alt+up",           "command": "editor.action.insertCursorAbove",
                                        "when": "editorTextFocus" },
      { "key": "shift+alt+i",           "command": "editor.action.insertCursorAtEndOfEachLineSelected",
                                        "when": "editorTextFocus" },
      { "key": "ctrl+alt+down",         "command": "editor.action.insertCursorBelow",
                                        "when": "editorTextFocus" },
      { "key": "ctrl+enter",            "command": "editor.action.insertLineAfter",
                                        "when": "editorTextFocus && !editorReadonly" },
      { "key": "ctrl+shift+enter",      "command": "editor.action.insertLineBefore",
                                        "when": "editorTextFocus && !editorReadonly" },
      { "key": "ctrl+shift+oem_5",      "command": "editor.action.jumpToBracket",
                                        "when": "editorTextFocus" },
      { "key": "alt+f8",                "command": "editor.action.marker.next",
                                        "when": "editorFocus" },
      { "key": "f8",                    "command": "editor.action.marker.nextInFiles",
                                        "when": "editorFocus" },
      { "key": "shift+alt+f8",          "command": "editor.action.marker.prev",
                                        "when": "editorFocus" },
      { "key": "shift+f8",              "command": "editor.action.marker.prevInFiles",
                                        "when": "editorFocus" },
      { "key": "alt+down",              "command": "editor.action.moveLinesDownAction",
                                        "when": "editorTextFocus && !editorReadonly" },
      { "key": "alt+up",                "command": "editor.action.moveLinesUpAction",
                                        "when": "editorTextFocus && !editorReadonly" },
      { "key": "ctrl+k ctrl+d",         "command": "editor.action.moveSelectionToNextFindMatch",
                                        "when": "editorFocus" },
      { "key": "f3",                    "command": "editor.action.nextMatchFindAction",
                                        "when": "editorFocus" },
      { "key": "enter",                 "command": "editor.action.nextMatchFindAction",
                                        "when": "editorFocus && findInputFocussed" },
      { "key": "ctrl+f3",               "command": "editor.action.nextSelectionMatchFindAction",
                                        "when": "editorFocus" },
      { "key": "ctrl+shift+f2",         "command": "editor.action.onTypeRename",
                                        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly" },
      { "key": "shift+alt+o",           "command": "editor.action.organizeImports",
                                        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/" },
      { "key": "ctrl+oem_4",            "command": "editor.action.outdentLines",
                                        "when": "editorTextFocus && !editorReadonly" },
      { "key": "alt+f12",               "command": "editor.action.peekDefinition",
                                        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" },
      { "key": "ctrl+shift+f12",        "command": "editor.action.peekImplementation",
                                        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" },
      { "key": "shift+f3",              "command": "editor.action.previousMatchFindAction",
                                        "when": "editorFocus" },
      { "key": "shift+enter",           "command": "editor.action.previousMatchFindAction",
                                        "when": "editorFocus && findInputFocussed" },
      { "key": "ctrl+shift+f3",         "command": "editor.action.previousSelectionMatchFindAction",
                                        "when": "editorFocus" },
      { "key": "ctrl+oem_period",       "command": "editor.action.quickFix",
                                        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly" },
      { "key": "ctrl+shift+r",          "command": "editor.action.refactor",
                                        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly" },
      { "key": "ctrl+k ctrl+u",         "command": "editor.action.removeCommentLine",
                                        "when": "editorTextFocus && !editorReadonly" },
      { "key": "f2",                    "command": "editor.action.rename",
                                        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly" },
      { "key": "f12",                   "command": "editor.action.revealDefinition",
                                        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
      { "key": "ctrl+k f12",            "command": "editor.action.revealDefinitionAside",
                                        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
      { "key": "ctrl+k ctrl+k",         "command": "editor.action.selectFromAnchorToCursor",
                                        "when": "editorTextFocus && selectionAnchorSet" },
      { "key": "ctrl+shift+l",          "command": "editor.action.selectHighlights",
                                        "when": "editorFocus" },
      { "key": "ctrl+k ctrl+b",         "command": "editor.action.setSelectionAnchor",
                                        "when": "editorTextFocus" },
      { "key": "alt+f1",                "command": "editor.action.showAccessibilityHelp",
                                        "when": "editorFocus" },
      { "key": "shift+f10",             "command": "editor.action.showContextMenu",
                                        "when": "textInputFocus" },
      { "key": "ctrl+k ctrl+i",         "command": "editor.action.showHover",
                                        "when": "editorTextFocus" },
      { "key": "shift+alt+right",       "command": "editor.action.smartSelect.expand",
                                        "when": "editorTextFocus" },
      { "key": "shift+alt+left",        "command": "editor.action.smartSelect.shrink",
                                        "when": "editorTextFocus" },
      { "key": "ctrl+h",                "command": "editor.action.startFindReplaceAction" },
      { "key": "ctrl+m",                "command": "editor.action.toggleTabFocusMode" },
      { "key": "alt+z",                 "command": "editor.action.toggleWordWrap" },
      { "key": "ctrl+shift+space",      "command": "editor.action.triggerParameterHints",
                                        "when": "editorHasSignatureHelpProvider && editorTextFocus" },
      { "key": "ctrl+space",            "command": "editor.action.triggerSuggest",
                                        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly" },
      { "key": "ctrl+k ctrl+x",         "command": "editor.action.trimTrailingWhitespace",
                                        "when": "editorTextFocus && !editorReadonly" },
      { "key": "enter",                 "command": "editor.action.webvieweditor.findNext",
                                        "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'" },
      { "key": "shift+enter",           "command": "editor.action.webvieweditor.findPrevious",
                                        "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'" },
      { "key": "escape",                "command": "editor.action.webvieweditor.hideFind",
                                        "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'" },
      { "key": "ctrl+a",                "command": "editor.action.webvieweditor.selectAll",
                                        "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'" },
      { "key": "ctrl+f",                "command": "editor.action.webvieweditor.showFind",
                                        "when": "!editorFocus && activeEditor == 'WebviewEditor'" },
      { "key": "f7",                    "command": "editor.action.wordHighlight.next",
                                        "when": "editorTextFocus && hasWordHighlights" },
      { "key": "shift+f7",              "command": "editor.action.wordHighlight.prev",
                                        "when": "editorTextFocus && hasWordHighlights" },
      { "key": "escape",                "command": "editor.cancelOperation",
                                        "when": "cancellableOperation" },
      { "key": "ctrl+k ctrl+i",         "command": "editor.debug.action.showDebugHover",
                                        "when": "editorTextFocus && inDebugMode" },
      { "key": "f9",                    "command": "editor.debug.action.toggleBreakpoint",
                                        "when": "editorTextFocus" },
      { "key": "tab",                   "command": "editor.emmet.action.expandAbbreviation",
                                        "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus" },
      { "key": "ctrl+shift+oem_4",      "command": "editor.fold",
                                        "when": "editorTextFocus && foldingEnabled" },
      { "key": "ctrl+k ctrl+0",         "command": "editor.foldAll",
                                        "when": "editorTextFocus && foldingEnabled" },
      { "key": "ctrl+k ctrl+oem_2",     "command": "editor.foldAllBlockComments",
                                        "when": "editorTextFocus && foldingEnabled" },
      { "key": "ctrl+k ctrl+8",         "command": "editor.foldAllMarkerRegions",
                                        "when": "editorTextFocus && foldingEnabled" },
      { "key": "ctrl+k ctrl+1",         "command": "editor.foldLevel1",
                                        "when": "editorTextFocus && foldingEnabled" },
      { "key": "ctrl+k ctrl+2",         "command": "editor.foldLevel2",
                                        "when": "editorTextFocus && foldingEnabled" },
      { "key": "ctrl+k ctrl+3",         "command": "editor.foldLevel3",
                                        "when": "editorTextFocus && foldingEnabled" },
      { "key": "ctrl+k ctrl+4",         "command": "editor.foldLevel4",
                                        "when": "editorTextFocus && foldingEnabled" },
      { "key": "ctrl+k ctrl+5",         "command": "editor.foldLevel5",
                                        "when": "editorTextFocus && foldingEnabled" },
      { "key": "ctrl+k ctrl+6",         "command": "editor.foldLevel6",
                                        "when": "editorTextFocus && foldingEnabled" },
      { "key": "ctrl+k ctrl+7",         "command": "editor.foldLevel7",
                                        "when": "editorTextFocus && foldingEnabled" },
      { "key": "ctrl+k ctrl+oem_4",     "command": "editor.foldRecursively",
                                        "when": "editorTextFocus && foldingEnabled" },
      { "key": "f12",                   "command": "editor.gotoNextSymbolFromResult",
                                        "when": "hasSymbols" },
      { "key": "escape",                "command": "editor.gotoNextSymbolFromResult.cancel",
                                        "when": "hasSymbols" },
      { "key": "ctrl+k ctrl+l",         "command": "editor.toggleFold",
                                        "when": "editorTextFocus && foldingEnabled" },
      { "key": "ctrl+shift+oem_6",      "command": "editor.unfold",
                                        "when": "editorTextFocus && foldingEnabled" },
      { "key": "ctrl+k ctrl+j",         "command": "editor.unfoldAll",
                                        "when": "editorTextFocus && foldingEnabled" },
      { "key": "ctrl+k ctrl+9",         "command": "editor.unfoldAllMarkerRegions",
                                        "when": "editorTextFocus && foldingEnabled" },
      { "key": "ctrl+k ctrl+oem_6",     "command": "editor.unfoldRecursively",
                                        "when": "editorTextFocus && foldingEnabled" },
      { "key": "tab",                   "command": "insertSnippet",
                                        "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode" },
      { "key": "ctrl+c",                "command": "notebook.cell.copy",
                                        "when": "notebookEditorFocused && !inputFocus" },
      { "key": "ctrl+x",                "command": "notebook.cell.cut",
                                        "when": "notebookEditorFocused && !inputFocus" },
      { "key": "ctrl+alt+enter",        "command": "notebook.cell.execute",
                                        "when": "notebookEditorFocused" },
      { "key": "alt+enter",             "command": "notebook.cell.executeAndInsertBelow",
                                        "when": "notebookEditorFocused" },
      { "key": "shift+enter",           "command": "notebook.cell.executeAndSelectBelow",
                                        "when": "notebookEditorFocused" },
      { "key": "ctrl+v",                "command": "notebook.cell.paste",
                                        "when": "notebookEditorFocused && !inputFocus" },
      { "key": "ctrl+shift+v",          "command": "notebook.cell.pasteAbove",
                                        "when": "notebookEditorFocused && !inputFocus" },
      { "key": "down",                  "command": "notebook.focusNextEditor",
                                        "when": "editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'" },
      { "key": "up",                    "command": "notebook.focusPreviousEditor",
                                        "when": "editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'" },
      { "key": "shift+alt+f",           "command": "notebook.formatCell",
                                        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'" },
      { "key": "ctrl+enter",            "command": "openReferenceToSide",
                                        "when": "listFocus && referenceSearchVisible && !inputFocus" },
      { "key": "enter",                 "command": "repl.action.acceptInput",
                                        "when": "inDebugRepl && textInputFocus" },
      { "key": "ctrl+f",                "command": "repl.action.filter",
                                        "when": "inDebugRepl && textInputFocus" },
      { "key": "ctrl+shift+r",          "command": "rerunSearchEditorSearch",
                                        "when": "inSearchEditor" },
      { "key": "escape",                "command": "search.action.focusQueryEditorWidget",
                                        "when": "inSearchEditor" },
      { "key": "escape",                "command": "settings.action.clearSearchResults",
                                        "when": "inSettingsSearch" },
      { "key": "ctrl+oem_period",       "command": "settings.action.editFocusedSetting",
                                        "when": "inSettingsSearch" },
      { "key": "enter",                 "command": "settings.action.focusNextSetting",
                                        "when": "inSettingsSearch" },
      { "key": "shift+enter",           "command": "settings.action.focusPreviousSetting",
                                        "when": "inSettingsSearch" },
      { "key": "down",                  "command": "settings.action.focusSettingsFile",
                                        "when": "inSettingsSearch && !suggestWidgetVisible" },
      { "key": "ctrl+f",                "command": "settings.action.search",
                                        "when": "inSettingsEditor" },
      { "key": "ctrl+oem_2",            "command": "toggleExplainMode",
                                        "when": "suggestWidgetVisible" },
      { "key": "ctrl+k f2",             "command": "togglePeekWidgetFocus",
                                        "when": "inReferenceSearchEditor || referenceSearchVisible" },
      { "key": "alt+f5",                "command": "workbench.action.editor.nextChange",
                                        "when": "editorTextFocus" },
      { "key": "shift+alt+f5",          "command": "workbench.action.editor.previousChange",
                                        "when": "editorTextFocus" },
      { "key": "shift+escape",          "command": "workbench.action.hideComment",
                                        "when": "commentEditorFocused" },
      { "key": "escape",                "command": "workbench.action.hideComment",
                                        "when": "commentEditorFocused" },
      { "key": "ctrl+enter",            "command": "workbench.action.submitComment",
                                        "when": "commentEditorFocused" },
      { "key": "ctrl+left",             "command": "cursorWordAccessibilityLeft",
                                        "when": "accessibilityModeEnabled && textInputFocus" },
      { "key": "ctrl+shift+left",       "command": "cursorWordAccessibilityLeftSelect",
                                        "when": "accessibilityModeEnabled && textInputFocus" },
      { "key": "ctrl+right",            "command": "cursorWordAccessibilityRight",
                                        "when": "accessibilityModeEnabled && textInputFocus" },
      { "key": "ctrl+shift+right",      "command": "cursorWordAccessibilityRightSelect",
                                        "when": "accessibilityModeEnabled && textInputFocus" },
      { "key": "shift+escape",          "command": "closeFindWidget",
                                        "when": "editorFocus && findWidgetVisible" },
      { "key": "escape",                "command": "closeFindWidget",
                                        "when": "editorFocus && findWidgetVisible" },
      { "key": "ctrl+alt+enter",        "command": "editor.action.replaceAll",
                                        "when": "editorFocus && findWidgetVisible" },
      { "key": "ctrl+shift+1",          "command": "editor.action.replaceOne",
                                        "when": "editorFocus && findWidgetVisible" },
      { "key": "enter",                 "command": "editor.action.replaceOne",
                                        "when": "editorFocus && findWidgetVisible && replaceInputFocussed" },
      { "key": "alt+enter",             "command": "editor.action.selectAllMatches",
                                        "when": "editorFocus && findWidgetVisible" },
      { "key": "alt+c",                 "command": "toggleFindCaseSensitive",
                                        "when": "editorFocus" },
      { "key": "alt+l",                 "command": "toggleFindInSelection",
                                        "when": "editorFocus" },
      { "key": "alt+r",                 "command": "toggleFindRegex",
                                        "when": "editorFocus" },
      { "key": "alt+w",                 "command": "toggleFindWholeWord",
                                        "when": "editorFocus" },
      { "key": "tab",                   "command": "jumpToNextSnippetPlaceholder",
                                        "when": "editorTextFocus && hasNextTabstop && inSnippetMode" },
      { "key": "shift+tab",             "command": "jumpToPrevSnippetPlaceholder",
                                        "when": "editorTextFocus && hasPrevTabstop && inSnippetMode" },
      { "key": "escape",                "command": "leaveEditorMessage",
                                        "when": "messageVisible" },
      { "key": "shift+escape",          "command": "leaveSnippet",
                                        "when": "editorTextFocus && inSnippetMode" },
      { "key": "escape",                "command": "leaveSnippet",
                                        "when": "editorTextFocus && inSnippetMode" },
      { "key": "shift+escape",          "command": "closeDirtyDiff",
                                        "when": "dirtyDiffVisible" },
      { "key": "escape",                "command": "closeDirtyDiff",
                                        "when": "dirtyDiffVisible" },
      { "key": "shift+escape",          "command": "closeMarkersNavigation",
                                        "when": "editorFocus && markersNavigationVisible" },
      { "key": "escape",                "command": "closeMarkersNavigation",
                                        "when": "editorFocus && markersNavigationVisible" },
      { "key": "shift+escape",          "command": "closeParameterHints",
                                        "when": "editorFocus && parameterHintsVisible" },
      { "key": "escape",                "command": "closeParameterHints",
                                        "when": "editorFocus && parameterHintsVisible" },
      { "key": "alt+down",              "command": "showNextParameterHint",
                                        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },
      { "key": "down",                  "command": "showNextParameterHint",
                                        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },
      { "key": "alt+up",                "command": "showPrevParameterHint",
                                        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },
      { "key": "up",                    "command": "showPrevParameterHint",
                                        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },
      { "key": "shift+tab",             "command": "acceptAlternativeSelectedSuggestion",
                                        "when": "suggestWidgetVisible && textInputFocus && textInputFocus" },
      { "key": "shift+enter",           "command": "acceptAlternativeSelectedSuggestion",
                                        "when": "suggestWidgetVisible && textInputFocus && textInputFocus" },
      { "key": "tab",                   "command": "acceptSelectedSuggestion",
                                        "when": "suggestWidgetVisible && textInputFocus" },
      { "key": "enter",                 "command": "acceptSelectedSuggestion",
                                        "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus" },
      { "key": "shift+escape",          "command": "hideSuggestWidget",
                                        "when": "suggestWidgetVisible && textInputFocus" },
      { "key": "escape",                "command": "hideSuggestWidget",
                                        "when": "suggestWidgetVisible && textInputFocus" },
      { "key": "tab",                   "command": "insertBestCompletion",
                                        "when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'" },
      { "key": "tab",                   "command": "insertNextSuggestion",
                                        "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'" },
      { "key": "shift+tab",             "command": "insertPrevSuggestion",
                                        "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'" },
      { "key": "ctrl+pagedown",         "command": "selectNextPageSuggestion",
                                        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
      { "key": "pagedown",              "command": "selectNextPageSuggestion",
                                        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
      { "key": "ctrl+down",             "command": "selectNextSuggestion",
                                        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
      { "key": "down",                  "command": "selectNextSuggestion",
                                        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
      { "key": "ctrl+pageup",           "command": "selectPrevPageSuggestion",
                                        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
      { "key": "pageup",                "command": "selectPrevPageSuggestion",
                                        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
      { "key": "ctrl+up",               "command": "selectPrevSuggestion",
                                        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
      { "key": "up",                    "command": "selectPrevSuggestion",
                                        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
      { "key": "ctrl+space",            "command": "toggleSuggestionDetails",
                                        "when": "suggestWidgetVisible && textInputFocus" },
      { "key": "ctrl+alt+space",        "command": "toggleSuggestionFocus",
                                        "when": "suggestWidgetVisible && textInputFocus" },
      { "key": "enter",                 "command": "acceptRenameInput",
                                        "when": "editorFocus && renameInputVisible" },
      { "key": "shift+enter",           "command": "acceptRenameInputWithPreview",
                                        "when": "config.editor.rename.enablePreview && editorFocus && renameInputVisible" },
      { "key": "shift+escape",          "command": "cancelOnTypeRenameInput",
                                        "when": "editorTextFocus && onTypeRenameInputVisible" },
      { "key": "escape",                "command": "cancelOnTypeRenameInput",
                                        "when": "editorTextFocus && onTypeRenameInputVisible" },
      { "key": "shift+escape",          "command": "cancelRenameInput",
                                        "when": "editorFocus && renameInputVisible" },
      { "key": "escape",                "command": "cancelRenameInput",
                                        "when": "editorFocus && renameInputVisible" },
      { "key": "ctrl+shift+l",          "command": "addCursorsAtSearchResults",
                                        "when": "fileMatchOrMatchFocus && searchViewletVisible" },
      { "key": "ctrl+shift+oem_1",      "command": "breadcrumbs.focus",
                                        "when": "breadcrumbsPossible" },
      { "key": "ctrl+shift+oem_period", "command": "breadcrumbs.focusAndSelect",
                                        "when": "breadcrumbsPossible" },
      { "key": "ctrl+right",            "command": "breadcrumbs.focusNext",
                                        "when": "breadcrumbsActive && breadcrumbsVisible" },
      { "key": "right",                 "command": "breadcrumbs.focusNext",
                                        "when": "breadcrumbsActive && breadcrumbsVisible" },
      { "key": "ctrl+left",             "command": "breadcrumbs.focusPrevious",
                                        "when": "breadcrumbsActive && breadcrumbsVisible" },
      { "key": "left",                  "command": "breadcrumbs.focusPrevious",
                                        "when": "breadcrumbsActive && breadcrumbsVisible" },
      { "key": "ctrl+enter",            "command": "breadcrumbs.revealFocused",
                                        "when": "breadcrumbsActive && breadcrumbsVisible" },
      { "key": "space",                 "command": "breadcrumbs.revealFocused",
                                        "when": "breadcrumbsActive && breadcrumbsVisible" },
      { "key": "ctrl+enter",            "command": "breadcrumbs.revealFocusedFromTreeAside",
                                        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus" },
      { "key": "down",                  "command": "breadcrumbs.selectFocused",
                                        "when": "breadcrumbsActive && breadcrumbsVisible" },
      { "key": "enter",                 "command": "breadcrumbs.selectFocused",
                                        "when": "breadcrumbsActive && breadcrumbsVisible" },
      { "key": "ctrl+shift+oem_period", "command": "breadcrumbs.toggleToOn",
                                        "when": "!config.breadcrumbs.enabled" },
      { "key": "shift+escape",          "command": "closeAccessibilityHelp",
                                        "when": "accessibilityHelpWidgetVisible && editorFocus" },
      { "key": "escape",                "command": "closeAccessibilityHelp",
                                        "when": "accessibilityHelpWidgetVisible && editorFocus" },
      { "key": "escape",                "command": "closeReplaceInFilesWidget",
                                        "when": "replaceInputBoxFocus && searchViewletVisible" },
      { "key": "shift+alt+c",           "command": "copyFilePath",
                                        "when": "!editorFocus" },
      { "key": "ctrl+k ctrl+shift+c",   "command": "copyRelativeFilePath",
                                        "when": "!editorFocus" },
      { "key": "alt+enter",             "command": "debug.openBreakpointToSide",
                                        "when": "breakpointsFocused" },
      { "key": "ctrl+enter",            "command": "debug.openBreakpointToSide",
                                        "when": "breakpointsFocused" },
      { "key": "delete",                "command": "debug.removeBreakpoint",
                                        "when": "breakpointsFocused && !breakpointSelected" },
      { "key": "delete",                "command": "debug.removeWatchExpression",
                                        "when": "watchExpressionsFocused && !expressionSelected" },
      { "key": "alt+oem_minus",         "command": "decreaseSearchEditorContextLines",
                                        "when": "inSearchEditor" },
      { "key": "shift+f9",              "command": "editor.debug.action.toggleInlineBreakpoint",
                                        "when": "editorTextFocus" },
      { "key": "shift+enter",           "command": "editor.refocusCallHierarchy",
                                        "when": "callHierarchyVisible" },
      { "key": "shift+alt+h",           "command": "editor.showCallHierarchy",
                                        "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor" },
      { "key": "shift+alt+h",           "command": "editor.toggleCallHierarchy",
                                        "when": "callHierarchyVisible" },
      { "key": "ctrl+enter",            "command": "explorer.openToSide",
                                        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus" },
      { "key": "shift+alt+f",           "command": "filesExplorer.findInFolder",
                                        "when": "explorerResourceIsFolder && explorerViewletVisible && filesExplorerFocus && !inputFocus" },
      { "key": "alt+down",              "command": "history.showNext",
                                        "when": "historyNavigationEnabled && historyNavigationWidget" },
      { "key": "down",                  "command": "history.showNext",
                                        "when": "historyNavigationEnabled && historyNavigationWidget" },
      { "key": "alt+up",                "command": "history.showPrevious",
                                        "when": "historyNavigationEnabled && historyNavigationWidget" },
      { "key": "up",                    "command": "history.showPrevious",
                                        "when": "historyNavigationEnabled && historyNavigationWidget" },
      { "key": "alt+oem_plus",          "command": "increaseSearchEditorContextLines",
                                        "when": "inSearchEditor" },
      { "key": "escape",                "command": "keybindings.editor.clearSearchResults",
                                        "when": "inKeybindings && inKeybindingsSearch" },
      { "key": "ctrl+c",                "command": "keybindings.editor.copyKeybindingEntry",
                                        "when": "inKeybindings && keybindingFocus" },
      { "key": "ctrl+k ctrl+k",         "command": "keybindings.editor.defineKeybinding",
                                        "when": "inKeybindings && keybindingFocus" },
      { "key": "ctrl+k ctrl+e",         "command": "keybindings.editor.defineWhenExpression",
                                        "when": "inKeybindings && keybindingFocus" },
      { "key": "down",                  "command": "keybindings.editor.focusKeybindings",
                                        "when": "inKeybindings && inKeybindingsSearch" },
      { "key": "alt+k",                 "command": "keybindings.editor.recordSearchKeys",
                                        "when": "inKeybindings && inKeybindingsSearch" },
      { "key": "delete",                "command": "keybindings.editor.removeKeybinding",
                                        "when": "inKeybindings && keybindingFocus" },
      { "key": "ctrl+f",                "command": "keybindings.editor.searchKeybindings",
                                        "when": "inKeybindings" },
      { "key": "alt+p",                 "command": "keybindings.editor.toggleSortByPrecedence",
                                        "when": "inKeybindings" },
      { "key": "escape",                "command": "list.clear",
                                        "when": "listFocus && listHasSelectionOrFocus && !inputFocus" },
      { "key": "left",                  "command": "list.collapse",
                                        "when": "listFocus && !inputFocus" },
      { "key": "ctrl+left",             "command": "list.collapseAll",
                                        "when": "listFocus && !inputFocus" },
      { "key": "right",                 "command": "list.expand",
                                        "when": "listFocus && !inputFocus" },
      { "key": "shift+down",            "command": "list.expandSelectionDown",
                                        "when": "listFocus && listSupportsMultiselect && !inputFocus" },
      { "key": "shift+up",              "command": "list.expandSelectionUp",
                                        "when": "listFocus && listSupportsMultiselect && !inputFocus" },
      { "key": "down",                  "command": "list.focusDown",
                                        "when": "listFocus && !inputFocus" },
      { "key": "home",                  "command": "list.focusFirst",
                                        "when": "listFocus && !inputFocus" },
      { "key": "end",                   "command": "list.focusLast",
                                        "when": "listFocus && !inputFocus" },
      { "key": "pagedown",              "command": "list.focusPageDown",
                                        "when": "listFocus && !inputFocus" },
      { "key": "pageup",                "command": "list.focusPageUp",
                                        "when": "listFocus && !inputFocus" },
      { "key": "up",                    "command": "list.focusUp",
                                        "when": "listFocus && !inputFocus" },
      { "key": "ctrl+down",             "command": "list.scrollDown",
                                        "when": "listFocus && !inputFocus" },
      { "key": "ctrl+up",               "command": "list.scrollUp",
                                        "when": "listFocus && !inputFocus" },
      { "key": "enter",                 "command": "list.select",
                                        "when": "listFocus && !inputFocus" },
      { "key": "ctrl+a",                "command": "list.selectAll",
                                        "when": "listFocus && listSupportsMultiselect && !inputFocus" },
      { "key": "space",                 "command": "list.toggleExpand",
                                        "when": "listFocus && !inputFocus" },
      { "key": "ctrl+shift+enter",      "command": "list.toggleSelection",
                                        "when": "listFocus && !inputFocus" },
      { "key": "y",                     "command": "notebook.cell.changeToCode",
                                        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'" },
      { "key": "m",                     "command": "notebook.cell.changeToMarkdown",
                                        "when": "notebookEditorFocused && !inputFocus" },
      { "key": "shift+alt+down",        "command": "notebook.cell.copyDown",
                                        "when": "notebookEditorFocused && !inputFocus" },
      { "key": "shift+alt+up",          "command": "notebook.cell.copyUp",
                                        "when": "notebookEditorFocused && !inputFocus" },
      { "key": "delete",                "command": "notebook.cell.delete",
                                        "when": "notebookEditorFocused && !inputFocus" },
      { "key": "enter",                 "command": "notebook.cell.edit",
                                        "when": "notebookEditorFocused && !inputFocus" },
      { "key": "ctrl+down",             "command": "notebook.cell.focusInOutput",
                                        "when": "notebookCellHasOutputs && notebookEditorFocused" },
      { "key": "ctrl+up",               "command": "notebook.cell.focusOutOutput",
                                        "when": "notebookEditorFocused" },
      { "key": "ctrl+shift+enter",      "command": "notebook.cell.insertCodeCellAbove",
                                        "when": "notebookEditorFocused && !inputFocus" },
      { "key": "ctrl+enter",            "command": "notebook.cell.insertCodeCellBelow",
                                        "when": "notebookEditorFocused && !inputFocus" },
      { "key": "alt+down",              "command": "notebook.cell.moveDown",
                                        "when": "notebookEditorFocused && !inputFocus" },
      { "key": "alt+up",                "command": "notebook.cell.moveUp",
                                        "when": "notebookEditorFocused && !inputFocus" },
      { "key": "ctrl+l",                "command": "notebook.centerActiveCell",
                                        "when": "notebookEditorFocused" },
      { "key": "ctrl+f",                "command": "notebook.find",
                                        "when": "notebookEditorFocused" },
      { "key": "ctrl+end",              "command": "notebook.focusBottom",
                                        "when": "notebookEditorFocused && !inputFocus" },
      { "key": "ctrl+down",             "command": "notebook.focusNextEditor",
                                        "when": "notebookEditorFocused && notebookOutputFocused" },
      { "key": "ctrl+home",             "command": "notebook.focusTop",
                                        "when": "notebookEditorFocused && !inputFocus" },
      { "key": "left",                  "command": "notebook.fold",
                                        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'" },
      { "key": "shift+alt+f",           "command": "notebook.format",
                                        "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'" },
      { "key": "escape",                "command": "notebook.hideFind",
                                        "when": "notebookEditorFocused && notebookFindWidgetFocused" },
      { "key": "ctrl+shift+z",          "command": "notebook.redo",
                                        "when": "notebookEditorFocused && !inputFocus" },
      { "key": "ctrl+z",                "command": "notebook.undo",
                                        "when": "notebookEditorFocused && !inputFocus" },
      { "key": "right",                 "command": "notebook.unfold",
                                        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'" },
      { "key": "delete",                "command": "notification.clear",
                                        "when": "notificationFocus" },
      { "key": "left",                  "command": "notification.collapse",
                                        "when": "notificationFocus" },
      { "key": "right",                 "command": "notification.expand",
                                        "when": "notificationFocus" },
      { "key": "enter",                 "command": "notification.toggle",
                                        "when": "notificationFocus" },
      { "key": "space",                 "command": "notification.toggle",
                                        "when": "notificationFocus" },
      { "key": "home",                  "command": "notifications.focusFirstToast",
                                        "when": "notificationFocus && notificationToastsVisible" },
      { "key": "pageup",                "command": "notifications.focusFirstToast",
                                        "when": "notificationFocus && notificationToastsVisible" },
      { "key": "end",                   "command": "notifications.focusLastToast",
                                        "when": "notificationFocus && notificationToastsVisible" },
      { "key": "pagedown",              "command": "notifications.focusLastToast",
                                        "when": "notificationFocus && notificationToastsVisible" },
      { "key": "down",                  "command": "notifications.focusNextToast",
                                        "when": "notificationFocus && notificationToastsVisible" },
      { "key": "up",                    "command": "notifications.focusPreviousToast",
                                        "when": "notificationFocus && notificationToastsVisible" },
      { "key": "ctrl+c",                "command": "problems.action.copy",
                                        "when": "problemFocus" },
      { "key": "ctrl+f",                "command": "problems.action.focusFilter",
                                        "when": "focusedView == 'workbench.panel.markers.view'" },
      { "key": "ctrl+down",             "command": "problems.action.focusProblemsFromFilter",
                                        "when": "problemsFilterFocus" },
      { "key": "ctrl+enter",            "command": "problems.action.openToSide",
                                        "when": "problemFocus" },
      { "key": "ctrl+oem_period",       "command": "problems.action.showQuickFixes",
                                        "when": "problemFocus" },
      { "key": "space",                 "command": "refactorPreview.toggleCheckedState",
                                        "when": "listFocus && refactorPreview.enabled && !inputFocus" },
      { "key": "shift+alt+r",           "command": "revealFileInOS",
                                        "when": "!editorFocus" },
      { "key": "ctrl+enter",            "command": "scm.acceptInput",
                                        "when": "scmRepository" },
      { "key": "escape",                "command": "search.action.cancel",
                                        "when": "listFocus && searchViewletVisible && !inputFocus" },
      { "key": "ctrl+c",                "command": "search.action.copyMatch",
                                        "when": "fileMatchOrMatchFocus" },
      { "key": "shift+alt+c",           "command": "search.action.copyPath",
                                        "when": "fileMatchOrFolderMatchWithResourceFocus" },
      { "key": "f4",                    "command": "search.action.focusNextSearchResult",
                                        "when": "hasSearchResult || inSearchEditor" },
      { "key": "shift+f4",              "command": "search.action.focusPreviousSearchResult",
                                        "when": "hasSearchResult || inSearchEditor" },
      { "key": "ctrl+up",               "command": "search.action.focusSearchFromResults",
                                        "when": "firstMatchFocus && searchViewletVisible" },
      { "key": "alt+enter",             "command": "search.action.openInEditor",
                                        "when": "hasSearchResult && searchViewletFocus" },
      { "key": "ctrl+enter",            "command": "search.action.openResultToSide",
                                        "when": "fileMatchOrMatchFocus && searchViewletVisible" },
      { "key": "delete",                "command": "search.action.remove",
                                        "when": "fileMatchOrMatchFocus && searchViewletVisible" },
      { "key": "ctrl+shift+1",          "command": "search.action.replace",
                                        "when": "matchFocus && replaceActive && searchViewletVisible" },
      { "key": "ctrl+alt+enter",        "command": "search.action.replaceAll",
                                        "when": "replaceActive && searchViewletVisible && !findWidgetVisible" },
      { "key": "ctrl+shift+enter",      "command": "search.action.replaceAllInFile",
                                        "when": "fileMatchFocus && replaceActive && searchViewletVisible" },
      { "key": "ctrl+shift+1",          "command": "search.action.replaceAllInFile",
                                        "when": "fileMatchFocus && replaceActive && searchViewletVisible" },
      { "key": "ctrl+shift+enter",      "command": "search.action.replaceAllInFolder",
                                        "when": "folderMatchFocus && replaceActive && searchViewletVisible" },
      { "key": "ctrl+shift+1",          "command": "search.action.replaceAllInFolder",
                                        "when": "folderMatchFocus && replaceActive && searchViewletVisible" },
      { "key": "ctrl+down",             "command": "search.focus.nextInputBox",
                                        "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible" },
      { "key": "ctrl+up",               "command": "search.focus.previousInputBox",
                                        "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus" },
      { "key": "ctrl+shift+l",          "command": "selectAllSearchEditorMatches",
                                        "when": "inSearchEditor" },
      { "key": "down",                  "command": "settings.action.focusSettingsFromSearch",
                                        "when": "inSettingsSearch && !suggestWidgetVisible" },
      { "key": "enter",                 "command": "settings.action.focusSettingsList",
                                        "when": "inSettingsEditor && settingsTocRowFocus" },
      { "key": "shift+f9",              "command": "settings.action.showContextMenu",
                                        "when": "inSettingsEditor" },
      { "key": "alt+c",                 "command": "toggleSearchCaseSensitive",
                                        "when": "searchViewletFocus" },
      { "key": "alt+c",                 "command": "toggleSearchEditorCaseSensitive",
                                        "when": "inSearchEditor && searchInputBoxFocus" },
      { "key": "alt+l",                 "command": "toggleSearchEditorContextLines",
                                        "when": "inSearchEditor" },
      { "key": "alt+r",                 "command": "toggleSearchEditorRegex",
                                        "when": "inSearchEditor && searchInputBoxFocus" },
      { "key": "alt+w",                 "command": "toggleSearchEditorWholeWord",
                                        "when": "inSearchEditor && searchInputBoxFocus" },
      { "key": "alt+r",                 "command": "toggleSearchRegex",
                                        "when": "searchViewletFocus" },
      { "key": "alt+w",                 "command": "toggleSearchWholeWord",
                                        "when": "searchViewletFocus" },
      { "key": "ctrl+w",                "command": "workbench.action.closeActiveEditor" },
      { "key": "ctrl+f4",               "command": "workbench.action.closeActiveEditor" },
      { "key": "ctrl+k ctrl+w",         "command": "workbench.action.closeAllEditors" },
      { "key": "ctrl+k ctrl+shift+w",   "command": "workbench.action.closeAllGroups" },
      { "key": "ctrl+k w",              "command": "workbench.action.closeEditorsInGroup" },
      { "key": "ctrl+k f",              "command": "workbench.action.closeFolder" },
      { "key": "ctrl+w",                "command": "workbench.action.closeGroup",
                                        "when": "activeEditorGroupEmpty && multipleEditorGroups" },
      { "key": "ctrl+f4",               "command": "workbench.action.closeGroup",
                                        "when": "activeEditorGroupEmpty && multipleEditorGroups" },
      { "key": "shift+escape",          "command": "workbench.action.closeQuickOpen",
                                        "when": "inQuickOpen" },
      { "key": "escape",                "command": "workbench.action.closeQuickOpen",
                                        "when": "inQuickOpen" },
      { "key": "ctrl+k u",              "command": "workbench.action.closeUnmodifiedEditors" },
      { "key": "ctrl+shift+w",          "command": "workbench.action.closeWindow" },
      { "key": "ctrl+w",                "command": "workbench.action.closeWindow",
                                        "when": "!editorIsOpen && !multipleEditorGroups" },
      { "key": "alt+f5",                "command": "workbench.action.compareEditor.nextChange",
                                        "when": "textCompareEditorVisible" },
      { "key": "shift+alt+f5",          "command": "workbench.action.compareEditor.previousChange",
                                        "when": "textCompareEditorVisible" },
      { "key": "f5",                    "command": "workbench.action.debug.continue",
                                        "when": "inDebugMode" },
      { "key": "ctrl+shift+f5",         "command": "workbench.action.debug.restart",
                                        "when": "inDebugMode" },
      { "key": "ctrl+f5",               "command": "workbench.action.debug.run" },
      { "key": "f5",                    "command": "workbench.action.debug.start",
                                        "when": "!inDebugMode" },
      { "key": "shift+f11",             "command": "workbench.action.debug.stepOut",
                                        "when": "debugState == 'stopped'" },
      { "key": "f10",                   "command": "workbench.action.debug.stepOver",
                                        "when": "debugState == 'stopped'" },
      { "key": "shift+f5",              "command": "workbench.action.debug.stop",
                                        "when": "inDebugMode" },
      { "key": "ctrl+k m",              "command": "workbench.action.editor.changeLanguageMode" },
      { "key": "ctrl+k p",              "command": "workbench.action.files.copyPathOfActiveFile" },
      { "key": "ctrl+n",                "command": "workbench.action.files.newUntitledFile" },
      { "key": "ctrl+o",                "command": "workbench.action.files.openFile" },
      { "key": "ctrl+k ctrl+o",         "command": "workbench.action.files.openFolder" },
      { "key": "ctrl+o",                "command": "workbench.action.files.openLocalFile",
                                        "when": "remoteFileDialogVisible" },
      { "key": "ctrl+k ctrl+o",         "command": "workbench.action.files.openLocalFolder",
                                        "when": "remoteFileDialogVisible" },
      { "key": "ctrl+k r",              "command": "workbench.action.files.revealActiveFileInWindows" },
      { "key": "ctrl+s",                "command": "workbench.action.files.save" },
      { "key": "ctrl+k s",              "command": "workbench.action.files.saveAll" },
      { "key": "ctrl+shift+s",          "command": "workbench.action.files.saveAs" },
      { "key": "ctrl+shift+s",          "command": "workbench.action.files.saveLocalFile",
                                        "when": "remoteFileDialogVisible" },
      { "key": "ctrl+k ctrl+shift+s",   "command": "workbench.action.files.saveWithoutFormatting" },
      { "key": "ctrl+k o",              "command": "workbench.action.files.showOpenedFileInNewWindow" },
      { "key": "ctrl+shift+f",          "command": "workbench.action.findInFiles" },
      { "key": "ctrl+k ctrl+up",        "command": "workbench.action.focusAboveGroup" },
      { "key": "ctrl+k ctrl+down",      "command": "workbench.action.focusBelowGroup" },
      { "key": "ctrl+8",                "command": "workbench.action.focusEighthEditorGroup" },
      { "key": "ctrl+5",                "command": "workbench.action.focusFifthEditorGroup" },
      { "key": "ctrl+1",                "command": "workbench.action.focusFirstEditorGroup" },
      { "key": "ctrl+4",                "command": "workbench.action.focusFourthEditorGroup" },
      { "key": "ctrl+k ctrl+left",      "command": "workbench.action.focusLeftGroup" },
      { "key": "f6",                    "command": "workbench.action.focusNextPart" },
      { "key": "shift+f6",              "command": "workbench.action.focusPreviousPart" },
      { "key": "ctrl+k ctrl+right",     "command": "workbench.action.focusRightGroup" },
      { "key": "ctrl+2",                "command": "workbench.action.focusSecondEditorGroup" },
      { "key": "ctrl+7",                "command": "workbench.action.focusSeventhEditorGroup" },
      { "key": "ctrl+0",                "command": "workbench.action.focusSideBar" },
      { "key": "ctrl+6",                "command": "workbench.action.focusSixthEditorGroup" },
      { "key": "ctrl+3",                "command": "workbench.action.focusThirdEditorGroup" },
      { "key": "ctrl+g",                "command": "workbench.action.gotoLine" },
      { "key": "ctrl+shift+o",          "command": "workbench.action.gotoSymbol" },
      { "key": "escape",                "command": "workbench.action.hideInterfaceOverview",
                                        "when": "interfaceOverviewVisible" },
      { "key": "down",                  "command": "workbench.action.interactivePlayground.arrowDown",
                                        "when": "interactivePlaygroundFocus && !editorTextFocus" },
      { "key": "up",                    "command": "workbench.action.interactivePlayground.arrowUp",
                                        "when": "interactivePlaygroundFocus && !editorTextFocus" },
      { "key": "pagedown",              "command": "workbench.action.interactivePlayground.pageDown",
                                        "when": "interactivePlaygroundFocus && !editorTextFocus" },
      { "key": "pageup",                "command": "workbench.action.interactivePlayground.pageUp",
                                        "when": "interactivePlaygroundFocus && !editorTextFocus" },
      { "key": "ctrl+k enter",          "command": "workbench.action.keepEditor" },
      { "key": "ctrl+k ctrl+r",         "command": "workbench.action.keybindingsReference" },
      { "key": "ctrl+9",                "command": "workbench.action.lastEditorInGroup" },
      { "key": "alt+0",                 "command": "workbench.action.lastEditorInGroup" },
      { "key": "ctrl+k down",           "command": "workbench.action.moveActiveEditorGroupDown" },
      { "key": "ctrl+k left",           "command": "workbench.action.moveActiveEditorGroupLeft" },
      { "key": "ctrl+k right",          "command": "workbench.action.moveActiveEditorGroupRight" },
      { "key": "ctrl+k up",             "command": "workbench.action.moveActiveEditorGroupUp" },
      { "key": "ctrl+shift+pageup",     "command": "workbench.action.moveEditorLeftInGroup" },
      { "key": "ctrl+shift+pagedown",   "command": "workbench.action.moveEditorRightInGroup" },
      { "key": "shift+alt+1",           "command": "workbench.action.moveEditorToFirstGroup" },
      { "key": "shift+alt+9",           "command": "workbench.action.moveEditorToLastGroup" },
      { "key": "ctrl+alt+right",        "command": "workbench.action.moveEditorToNextGroup" },
      { "key": "ctrl+alt+left",         "command": "workbench.action.moveEditorToPreviousGroup" },
      { "key": "alt+left",              "command": "workbench.action.navigateBack" },
      { "key": "alt+right",             "command": "workbench.action.navigateForward" },
      { "key": "ctrl+k ctrl+q",         "command": "workbench.action.navigateToLastEditLocation" },
      { "key": "ctrl+shift+n",          "command": "workbench.action.newWindow" },
      { "key": "ctrl+pagedown",         "command": "workbench.action.nextEditor" },
      { "key": "ctrl+k ctrl+pagedown",  "command": "workbench.action.nextEditorInGroup" },
      { "key": "alt+1",                 "command": "workbench.action.openEditorAtIndex1" },
      { "key": "alt+2",                 "command": "workbench.action.openEditorAtIndex2" },
      { "key": "alt+3",                 "command": "workbench.action.openEditorAtIndex3" },
      { "key": "alt+4",                 "command": "workbench.action.openEditorAtIndex4" },
      { "key": "alt+5",                 "command": "workbench.action.openEditorAtIndex5" },
      { "key": "alt+6",                 "command": "workbench.action.openEditorAtIndex6" },
      { "key": "alt+7",                 "command": "workbench.action.openEditorAtIndex7" },
      { "key": "alt+8",                 "command": "workbench.action.openEditorAtIndex8" },
      { "key": "alt+9",                 "command": "workbench.action.openEditorAtIndex9" },
      { "key": "ctrl+k ctrl+s",         "command": "workbench.action.openGlobalKeybindings" },
      { "key": "ctrl+r",                "command": "workbench.action.openRecent" },
      { "key": "ctrl+oem_comma",        "command": "workbench.action.openSettings" },
      { "key": "ctrl+shift+u",          "command": "workbench.action.output.toggleOutput" },
      { "key": "ctrl+k shift+enter",    "command": "workbench.action.pinEditor",
                                        "when": "config.workbench.editor.showTabs && !editorSticky" },
      { "key": "ctrl+pageup",           "command": "workbench.action.previousEditor" },
      { "key": "ctrl+k ctrl+pageup",    "command": "workbench.action.previousEditorInGroup" },
      { "key": "ctrl+e",                "command": "workbench.action.quickOpen" },
      { "key": "ctrl+p",                "command": "workbench.action.quickOpen" },
      { "key": "ctrl+shift+tab",        "command": "workbench.action.quickOpenLeastRecentlyUsedEditorInGroup" },
      { "key": "ctrl+tab",              "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup" },
      { "key": "ctrl+q",                "command": "workbench.action.quickOpenView" },
      { "key": "ctrl+shift+t",          "command": "workbench.action.reopenClosedEditor" },
      { "key": "ctrl+shift+h",          "command": "workbench.action.replaceInFiles" },
      { "key": "ctrl+shift+j",          "command": "workbench.action.search.toggleQueryDetails",
                                        "when": "inSearchEditor || searchViewletFocus" },
      { "key": "ctrl+shift+backspace",  "command": "workbench.action.searchEditor.deleteResultBlock",
                                        "when": "inSearchEditor" },
      { "key": "ctrl+k ctrl+t",         "command": "workbench.action.selectTheme" },
      { "key": "ctrl+k ctrl+p",         "command": "workbench.action.showAllEditors" },
      { "key": "ctrl+t",                "command": "workbench.action.showAllSymbols" },
      { "key": "f1",                    "command": "workbench.action.showCommands" },
      { "key": "ctrl+shift+p",          "command": "workbench.action.showCommands" },
      { "key": "ctrl+oem_5",            "command": "workbench.action.splitEditor" },
      { "key": "ctrl+k ctrl+oem_5",     "command": "workbench.action.splitEditorOrthogonal" },
      { "key": "ctrl+shift+b",          "command": "workbench.action.tasks.build" },
      { "key": "escape",                "command": "workbench.action.terminal.clearSelection",
                                        "when": "terminalFocus && terminalTextSelected && !terminalFindVisible" },
      { "key": "ctrl+shift+c",          "command": "workbench.action.terminal.copySelection",
                                        "when": "terminalFocus && terminalTextSelected" },
      { "key": "ctrl+c",                "command": "workbench.action.terminal.copySelection",
                                        "when": "terminalFocus && terminalTextSelected" },
      { "key": "f3",                    "command": "workbench.action.terminal.findNext",
                                        "when": "terminalFindFocused || terminalFocus" },
      { "key": "shift+enter",           "command": "workbench.action.terminal.findNext",
                                        "when": "terminalFindFocused" },
      { "key": "shift+f3",              "command": "workbench.action.terminal.findPrevious",
                                        "when": "terminalFindFocused || terminalFocus" },
      { "key": "enter",                 "command": "workbench.action.terminal.findPrevious",
                                        "when": "terminalFindFocused" },
      { "key": "ctrl+f",                "command": "workbench.action.terminal.focusFind",
                                        "when": "terminalFindFocused || terminalFocus" },
      { "key": "alt+down",              "command": "workbench.action.terminal.focusNextPane",
                                        "when": "terminalFocus" },
      { "key": "alt+right",             "command": "workbench.action.terminal.focusNextPane",
                                        "when": "terminalFocus" },
      { "key": "alt+up",                "command": "workbench.action.terminal.focusPreviousPane",
                                        "when": "terminalFocus" },
      { "key": "alt+left",              "command": "workbench.action.terminal.focusPreviousPane",
                                        "when": "terminalFocus" },
      { "key": "shift+escape",          "command": "workbench.action.terminal.hideFind",
                                        "when": "terminalFindVisible && terminalFocus" },
      { "key": "escape",                "command": "workbench.action.terminal.hideFind",
                                        "when": "terminalFindVisible && terminalFocus" },
      { "key": "escape",                "command": "workbench.action.terminal.navigationModeExit",
                                        "when": "accessibilityModeEnabled && terminalA11yTreeFocus" },
      { "key": "ctrl+down",             "command": "workbench.action.terminal.navigationModeFocusNext",
                                        "when": "accessibilityModeEnabled && terminalA11yTreeFocus || accessibilityModeEnabled && terminalFocus" },
      { "key": "ctrl+up",               "command": "workbench.action.terminal.navigationModeFocusPrevious",
                                        "when": "accessibilityModeEnabled && terminalA11yTreeFocus || accessibilityModeEnabled && terminalFocus" },
      { "key": "ctrl+shift+oem_3",      "command": "workbench.action.terminal.new" },
      { "key": "ctrl+shift+c",          "command": "workbench.action.terminal.openNativeConsole",
                                        "when": "!terminalFocus" },
      { "key": "ctrl+shift+v",          "command": "workbench.action.terminal.paste",
                                        "when": "terminalFocus" },
      { "key": "ctrl+v",                "command": "workbench.action.terminal.paste",
                                        "when": "terminalFocus" },
      { "key": "ctrl+alt+pagedown",     "command": "workbench.action.terminal.scrollDown",
                                        "when": "terminalFocus" },
      { "key": "shift+pagedown",        "command": "workbench.action.terminal.scrollDownPage",
                                        "when": "terminalFocus" },
      { "key": "ctrl+end",              "command": "workbench.action.terminal.scrollToBottom",
                                        "when": "terminalFocus" },
      { "key": "ctrl+home",             "command": "workbench.action.terminal.scrollToTop",
                                        "when": "terminalFocus" },
      { "key": "ctrl+alt+pageup",       "command": "workbench.action.terminal.scrollUp",
                                        "when": "terminalFocus" },
      { "key": "shift+pageup",          "command": "workbench.action.terminal.scrollUpPage",
                                        "when": "terminalFocus" },
      { "key": "ctrl+v",                "command": "workbench.action.terminal.sendSequence",
                                        "when": "terminalFocus && !accessibilityModeEnabled && terminalShellType == 'pwsh'",
                                        "args": {"text":"\u0016"} },
      { "key": "ctrl+backspace",        "command": "workbench.action.terminal.sendSequence",
                                        "when": "terminalFocus",
                                        "args": {"text":"\u0017"} },
      { "key": "ctrl+delete",           "command": "workbench.action.terminal.sendSequence",
                                        "when": "terminalFocus",
                                        "args": {"text":"\u001bd"} },
      { "key": "ctrl+shift+5",          "command": "workbench.action.terminal.split",
                                        "when": "terminalFocus" },
      { "key": "alt+c",                 "command": "workbench.action.terminal.toggleFindCaseSensitive",
                                        "when": "terminalFindFocused || terminalFocus" },
      { "key": "alt+r",                 "command": "workbench.action.terminal.toggleFindRegex",
                                        "when": "terminalFindFocused || terminalFocus" },
      { "key": "alt+w",                 "command": "workbench.action.terminal.toggleFindWholeWord",
                                        "when": "terminalFindFocused || terminalFocus" },
      { "key": "ctrl+oem_3",            "command": "workbench.action.terminal.toggleTerminal" },
      { "key": "shift+alt+0",           "command": "workbench.action.toggleEditorGroupLayout" },
      { "key": "f11",                   "command": "workbench.action.toggleFullScreen" },
      { "key": "ctrl+j",                "command": "workbench.action.togglePanel" },
      { "key": "ctrl+b",                "command": "workbench.action.toggleSidebarVisibility" },
      { "key": "ctrl+k z",              "command": "workbench.action.toggleZenMode" },
      { "key": "ctrl+k shift+enter",    "command": "workbench.action.unpinEditor",
                                        "when": "config.workbench.editor.showTabs && editorSticky" },
      { "key": "ctrl+numpad_add",       "command": "workbench.action.zoomIn" },
      { "key": "ctrl+shift+oem_plus",   "command": "workbench.action.zoomIn" },
      { "key": "ctrl+oem_plus",         "command": "workbench.action.zoomIn" },
      { "key": "ctrl+numpad_subtract",  "command": "workbench.action.zoomOut" },
      { "key": "ctrl+shift+oem_minus",  "command": "workbench.action.zoomOut" },
      { "key": "ctrl+oem_minus",        "command": "workbench.action.zoomOut" },
      { "key": "ctrl+numpad0",          "command": "workbench.action.zoomReset" },
      { "key": "ctrl+shift+m",          "command": "workbench.actions.view.problems" },
      { "key": "ctrl+shift+y",          "command": "workbench.debug.action.toggleRepl" },
      { "key": "ctrl+k ctrl+m",         "command": "workbench.extensions.action.showRecommendedKeymapExtensions" },
      { "key": "ctrl+k c",              "command": "workbench.files.action.compareWithClipboard" },
      { "key": "ctrl+k d",              "command": "workbench.files.action.compareWithSaved" },
      { "key": "ctrl+k e",              "command": "workbench.files.action.focusOpenEditorsView",
                                        "when": "workbench.explorer.openEditorsView.active" },
      { "key": "escape",                "command": "workbench.statusBar.clearFocus",
                                        "when": "statusBarFocused" },
      { "key": "home",                  "command": "workbench.statusBar.focusFirst",
                                        "when": "statusBarFocused" },
      { "key": "end",                   "command": "workbench.statusBar.focusLast",
                                        "when": "statusBarFocused" },
      { "key": "down",                  "command": "workbench.statusBar.focusNext",
                                        "when": "statusBarFocused" },
      { "key": "right",                 "command": "workbench.statusBar.focusNext",
                                        "when": "statusBarFocused" },
      { "key": "up",                    "command": "workbench.statusBar.focusPrevious",
                                        "when": "statusBarFocused" },
      { "key": "left",                  "command": "workbench.statusBar.focusPrevious",
                                        "when": "statusBarFocused" },
      { "key": "ctrl+shift+d",          "command": "workbench.view.debug" },
      { "key": "ctrl+shift+e",          "command": "workbench.view.explorer" },
      { "key": "ctrl+shift+x",          "command": "workbench.view.extensions" },
      { "key": "ctrl+shift+g",          "command": "workbench.view.scm" },
      { "key": "ctrl+shift+f",          "command": "workbench.view.search",
                                        "when": "!searchViewletVisible" },
      { "key": "ctrl+right",            "command": "breadcrumbs.focusNextWithPicker",
                                        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus" },
      { "key": "ctrl+left",             "command": "breadcrumbs.focusPreviousWithPicker",
                                        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus" },
      { "key": "escape",                "command": "breadcrumbs.selectEditor",
                                        "when": "breadcrumbsActive && breadcrumbsVisible" },
      { "key": "ctrl+k down",           "command": "views.moveViewDown",
                                        "when": "focusedView != ''" },
      { "key": "ctrl+k left",           "command": "views.moveViewLeft",
                                        "when": "focusedView != ''" },
      { "key": "ctrl+k right",          "command": "views.moveViewRight",
                                        "when": "focusedView != ''" },
      { "key": "ctrl+k up",             "command": "views.moveViewUp",
                                        "when": "focusedView != ''" },
      { "key": "f6",                    "command": "workbench.action.debug.pause",
                                        "when": "debugState == 'running'" },
      { "key": "f2",                    "command": "debug.renameWatchExpression",
                                        "when": "watchExpressionsFocused" },
      { "key": "f2",                    "command": "debug.setVariable",
                                        "when": "variablesFocused" },
      { "key": "space",                 "command": "debug.toggleBreakpoint",
                                        "when": "breakpointsFocused && !inputFocus" },
      { "key": "shift+delete",          "command": "deleteFile",
                                        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus" },
      { "key": "delete",                "command": "deleteFile",
                                        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus" },
      { "key": "escape",                "command": "editor.closeCallHierarchy",
                                        "when": "callHierarchyVisible && !config.editor.stablePeek" },
      { "key": "escape",                "command": "filesExplorer.cancelCut",
                                        "when": "explorerResourceCut && explorerViewletVisible && filesExplorerFocus && !inputFocus" },
      { "key": "ctrl+c",                "command": "filesExplorer.copy",
                                        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus" },
      { "key": "ctrl+x",                "command": "filesExplorer.cut",
                                        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus" },
      { "key": "space",                 "command": "filesExplorer.openFilePreserveFocus",
                                        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus" },
      { "key": "ctrl+v",                "command": "filesExplorer.paste",
                                        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus" },
      { "key": "home",                  "command": "firstCompressedFolder",
                                        "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus" },
      { "key": "end",                   "command": "lastCompressedFolder",
                                        "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus" },
      { "key": "delete",                "command": "moveFileToTrash",
                                        "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus" },
      { "key": "right",                 "command": "nextCompressedFolder",
                                        "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus" },
      { "key": "left",                  "command": "previousCompressedFolder",
                                        "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus" },
      { "key": "delete",                "command": "remote.tunnel.closeInline",
                                        "when": "tunnelCloseable && tunnelViewFocus" },
      { "key": "ctrl+c",                "command": "remote.tunnel.copyAddressInline",
                                        "when": "tunnelViewFocus && tunnelType == 'Detected' || tunnelViewFocus && tunnelType == 'Forwarded'" },
      { "key": "f2",                    "command": "remote.tunnel.label",
                                        "when": "tunnelViewFocus && tunnelType == 'Forwarded'" },
      { "key": "f2",                    "command": "renameFile",
                                        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus" },
      { "key": "f11",                   "command": "workbench.action.debug.stepInto",
                                        "when": "debugState != 'inactive'" },
      { "key": "shift+escape",          "command": "closeReferenceSearch",
                                        "when": "referenceSearchVisible && !config.editor.stablePeek" },
      { "key": "escape",                "command": "closeReferenceSearch",
                                        "when": "referenceSearchVisible && !config.editor.stablePeek" },
      { "key": "escape",                "command": "notifications.hideList",
                                        "when": "notificationCenterVisible" },
      { "key": "escape",                "command": "notifications.hideToasts",
                                        "when": "notificationToastsVisible" },
      { "key": "alt+left",              "command": "workbench.action.quickInputBack",
                                        "when": "inQuickOpen" },
      { "key": "ctrl+tab",              "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
                                        "when": "inEditorsPicker && inQuickOpen" },
      { "key": "ctrl+e",                "command": "workbench.action.quickOpenNavigateNextInFilePicker",
                                        "when": "inFilesPicker && inQuickOpen" },
      { "key": "ctrl+p",                "command": "workbench.action.quickOpenNavigateNextInFilePicker",
                                        "when": "inFilesPicker && inQuickOpen" },
      { "key": "ctrl+r",                "command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker",
                                        "when": "inQuickOpen && inRecentFilesPicker" },
      { "key": "ctrl+q",                "command": "workbench.action.quickOpenNavigateNextInViewPicker",
                                        "when": "inQuickOpen && inViewsPicker" },
      { "key": "ctrl+shift+tab",        "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
                                        "when": "inEditorsPicker && inQuickOpen" },
      { "key": "ctrl+shift+e",          "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
                                        "when": "inFilesPicker && inQuickOpen" },
      { "key": "ctrl+shift+p",          "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
                                        "when": "inFilesPicker && inQuickOpen" },
      { "key": "ctrl+shift+r",          "command": "workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
                                        "when": "inQuickOpen && inRecentFilesPicker" },
      { "key": "ctrl+shift+q",          "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
                                        "when": "inQuickOpen && inViewsPicker" },
      { "key": "ctrl+r",                "command": "workbench.action.reloadWindow",
                                        "when": "isDevelopment" },
      { "key": "ctrl+shift+i",          "command": "workbench.action.toggleDevTools",
                                        "when": "isDevelopment" },
      { "key": "f10",                   "command": "extension.node-debug.startWithStopOnEntry",
                                        "when": "!inDebugMode && debugConfigurationType == 'node'" },
      { "key": "ctrl+k ctrl+alt+s",     "command": "git.stageSelectedRanges",
                                        "when": "isInDiffEditor" },
      { "key": "ctrl+shift+v",          "command": "markdown.showPreview",
                                        "when": "editorLangId == 'markdown'" },
      { "key": "shift+alt+f12",         "command": "references-view.find",
                                        "when": "editorHasReferenceProvider" },
      { "key": "ctrl+k ctrl+n",         "command": "git.unstageSelectedRanges",
                                        "when": "isInDiffEditor" },
      { "key": "ctrl+k v",              "command": "markdown.showPreviewToSide",
                                        "when": "editorLangId == 'markdown'" },
      { "key": "f4",                    "command": "references-view.next",
                                        "when": "reference-list.hasResult" },
      { "key": "ctrl+k ctrl+r",         "command": "git.revertSelectedRanges",
                                        "when": "isInDiffEditor" },
      { "key": "shift+f4",              "command": "references-view.prev",
                                        "when": "reference-list.hasResult" },
      { "key": "shift+alt+h",           "command": "references-view.showCallHierarchy",
                                        "when": "editorHasCallHierarchyProvider" }
    ]
  }
}
